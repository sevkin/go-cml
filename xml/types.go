package xml

// http://v8.1c.ru/edi/edi_stnd/90/92.htm
// https://dev.1c-bitrix.ru/api_help/sale/xml/index.php

// с совместимостью версий тут полный песец

/* TODO разные версии надо как то так...

import "cml/xml/v204"

КоммерческаяИнформация struct {
	ВерсияСхемы      string `xml:",attr"`
	ДатаФормирования string `xml:",attr"`
}

var ki *КоммерческаяИнформация
xml.Unmarshal(data, ki)
switch ki.ВерсияСхемы {
case "2.04":
	var ki204 *v204.КоммерческаяИнформация
	xml.Unmarshal(data, ki204)
	return ki204
}

а ниже некоторое подмножество, которого надеюсь хватит
*/

type (
	// КоммерческаяИнформация корневой элемент
	КоммерческаяИнформация struct {
		ВерсияСхемы          string            `xml:",attr"`
		ДатаФормирования     string            `xml:",attr"`
		СинхронизацияТоваров bool              `xml:",attr"`
		Классификатор        *Классификатор    `xml:",omitempty"`
		Каталог              *Каталог          `xml:",omitempty"`
		ПакетПредложений     *ПакетПредложений `xml:",omitempty"`
	}

	// ////////////////////////////////////////////////////////////////////////////

	// Классификатор содержит группы товаров
	Классификатор struct {
		Ид           string
		Наименование string
		Владелец     Владелец
		Группы       []Группа `xml:"Группы>Группа"`
		Свойства     struct{} // TODO wtf?
	}

	// Группа товаров. Может содержать вложенные группы
	Группа struct {
		Ид           string
		Наименование string
		Группы       *[]Группа `xml:"Группы>Группа,omitempty"`
	}

	// ////////////////////////////////////////////////////////////////////////////

	// Каталог содержит товары
	Каталог struct {
		СодержитТолькоИзменения bool `xml:",attr"`
		Ид                      string
		ИдКлассификатора        string
		Наименование            string
		Товары                  []Товар `xml:"Товары>Товар"`
	}

	// Товар ...
	Товар struct {
		Ид                 string
		Артикул            string
		Наименование       string
		БазоваяЕдиница     БазоваяЕдиница
		Группы             []string            `xml:"Группы>Ид"`
		ЗначенияСвойств    struct{}            // TODO wtf?
		ЗначенияРеквизитов []ЗначениеРеквизита `xml:"ЗначенияРеквизитов>ЗначениеРеквизита"`
		Картинка           string              `xml:",omitempty"`
	}

	// ЗначениеРеквизита ...
	ЗначениеРеквизита struct {
		Наименование string
		Значение     string
	}

	// ////////////////////////////////////////////////////////////////////////////

	// ПакетПредложений содержит остатки и цены
	ПакетПредложений struct {
		СодержитТолькоИзменения bool `xml:",attr"`
		Ид                      string
		Наименование            string
		ИдКаталога              string
		ИдКлассификатора        string
		Владелец                Владелец
		ТипыЦен                 []ТипЦены     `xml:"ТипыЦен>ТипЦены"`
		Склады                  []Склад       `xml:"Склады>Склад"`
		Предложения             []Предложение `xml:"Предложения>Предложение"`
	}

	// ТипЦены ...
	ТипЦены struct {
		Ид           string
		Наименование string
		Валюта       string
		Налог        struct {
			Наименование string
			УчтеноВСумме bool
		}
	}

	// Склад ...
	Склад struct {
		Ид           string
		Наименование string
	}

	// Предложение товара содержит остатки и цены
	Предложение struct {
		Ид             string
		Артикул        string
		Наименование   string
		БазоваяЕдиница БазоваяЕдиница
		Цены           []Цена `xml:"Цены>Цена"`
		Количество     string
		Склад          []Остаток `xml:"Склад"`
	}

	// Цена ...
	Цена struct {
		ИдТипаЦены    string
		ЦенаЗаЕдиницу string
		Валюта        string
		Единица       string
		Коэффициент   string
	}

	// Остаток на складе
	Остаток struct {
		ИдСклада           string `xml:",attr"`
		КоличествоНаСкладе string `xml:",attr"`
		Склад              string `xml:",innerxml"`
	}

	// ////////////////////////////////////////////////////////////////////////////

	// Владелец ...
	Владелец struct {
		Ид               string
		Наименование     string
		Контакты         *[]Контакт `xml:"Контакты>Контакт,omitempty"`
		ЮридическийАдрес *[]string  `xml:"ЮридическийАдрес>Представление,omitempty"`
		ИНН              string     `xml:",omitempty"`
		КПП              string     `xml:",omitempty"`
	}

	// Контакт ...
	Контакт struct {
		Тип      string
		Значение string
	}

	// ////////////////////////////////////////////////////////////////////////////

	// БазоваяЕдиница ...
	БазоваяЕдиница struct {
		НаименованиеПолное string `xml:",attr"`
		БазоваяЕдиница     string `xml:",chardata"`
	}
)
